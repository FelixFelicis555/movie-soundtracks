SELECT *
FROM <http://imn.htwk-leipzig.de/pbachman/ontologies/imdb#>
FROM <http://imn.htwk-leipzig.de/pbachman/ontologies/lastfm#>
FROM <http://imn.htwk-leipzig.de/pbachman/ontologies/tunefind#>
FROM <http://imn.htwk-leipzig.de/pbachman/ontologies/references#>
WHERE
{
    {
    SELECT (COUNT(DISTINCT ?song) as ?AnzSongs)
    WHERE
    {
        ?imdbmovie a dbpedia-owl:Film ;
                   dbpprop:title ?movie ;
                   dbpedia-owl:director ?dir ;
                   owl:sameAs ?tunefindFilm .

        ?tunefindFilm tunefind:contains ?song .

        ?dir dbpprop:name ?name .

        FILTER (?name = "Michael Bay")
    }
    }

    {
    SELECT (COUNT(DISTINCT ?s) as ?RockSongs)
    WHERE
    {
        ?imdbmovie a dbpedia-owl:Film ;
                   dbpprop:title ?movie ;
                   dbpedia-owl:director ?dir ;
                   owl:sameAs ?tunefindFilm .

        ?tunefindFilm tunefind:contains ?song .

        ?song rdfs:label ?s ;
              owl:sameAs ?lastFmSong .

        ?lastFmSong lastfm:tagged ?tag .

        ?dir dbpprop:name ?name .

        FILTER (?name = "Michael Bay")
        FILTER (CONTAINS(lcase(?tag), "rock"))
    }
    }

    {
    SELECT (COUNT(DISTINCT ?s) as ?LoveSongs)
    WHERE
    {
        ?imdbmovie a dbpedia-owl:Film ;
                   dbpprop:title ?movie ;
                   dbpedia-owl:director ?dir ;
                   owl:sameAs ?tunefindFilm .

        ?tunefindFilm tunefind:contains ?song .

        ?song rdfs:label ?s ;
              owl:sameAs ?lastFmSong .

        ?lastFmSong lastfm:tagged ?tag .

        ?dir dbpprop:name ?name .

        FILTER (?name = "Michael Bay")
        FILTER (CONTAINS(lcase(?tag), "love"))
    }
    }
}